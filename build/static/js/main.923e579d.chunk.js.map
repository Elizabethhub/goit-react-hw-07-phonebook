{"version":3,"sources":["redux/contacts/contactSelectors.js","redux/contacts/contactActions.js","redux/contacts/contactsOperations.js","components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItemStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/section/SectionStyled.js","components/section/Section.js","App.js","redux/contacts/contactReducer.js","redux/store.js","index.js"],"names":["getContacts","state","contacts","items","getLoading","loading","getFilteredContacts","createSelector","filter","name","toLowerCase","includes","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactRequest","getContactSuccess","getContactError","setFilter","axios","defaults","baseURL","ContactFormStyled","styled","div","ContactForm","number","handleInputChange","event","currentTarget","value","setState","onHandleSubmit","e","preventDefault","contact","props","find","alert","onSubmit","this","fetchContacts","onChange","type","className","pattern","title","required","Component","connect","dispatch","a","post","data","id","message","addContact","get","Object","keys","map","key","ContactListItemStyled","ContactListItem","onDeleteContact","onClick","delete","FilterStyled","mapDispatchToProps","target","SectionStyled","section","Section","children","toUpperCase","App","createReducer","_","payload","item","setError","resetError","error","contactReducer","combineReducers","rootReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.923e579d.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getAllContacts = (state) => state.contacts.items;\nexport const getLoading = (state) => state.contacts.loading;\nexport const getError = (state) => state.contacts.error;\n\nexport const getFilteredContacts = createSelector([getAllContacts, getFilter], (contacts, filter) => {\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n});\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nexport const deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const getContactRequest = createAction(\"contacts/getContactRequest\");\nexport const getContactSuccess = createAction(\"contacts/getContactSuccess\");\nexport const getContactError = createAction(\"contacts/getContactError\");\n\nexport const setFilter = createAction(\"contacts/setFilter\");\n","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactError,\n  addContactSuccess,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n} from \"./contactActions\";\n\naxios.defaults.baseURL = \"https://phonebook-5b0f2-default-rtdb.firebaseio.com\";\n\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(getContactRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts.json\");\n    dispatch(getContactSuccess(Object.keys(data).map((key) => ({ id: key, ...data[key] }))));\n  } catch (error) {\n    dispatch(getContactError(error.message));\n  }\n};\nexport const addContact = (contact) => async (dispatch) => {\n  dispatch(addContactRequest());\n  try {\n    const { data } = await axios.post(\"/contacts.json\", contact);\n    dispatch(addContactSuccess({ id: data.name, ...contact }));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nexport const deleteContact = (id) => async (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}.json`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n","import styled from \"styled-components\";\n\nexport const ContactFormStyled = styled.div`\n  padding: 25px 15px;\n  margin: 10px;\n  border: 1px solid;\n  border-radius: 5px;\n  width: 400px;\n  .inputName {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    display: block;\n  }\n  .btnAdd {\n    display: block;\n    margin-top: 30px;\n    padding: 3px 5px;\n    border-radius: 6px;\n    cursor: pointer;\n    background-color: transparent;\n    &:hover {\n      background-color: cornflowerblue;\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/contactSelectors\";\nimport { addContact, fetchContacts } from \"../../redux/contacts/contactsOperations\";\nimport { ContactFormStyled } from \"./ContactFormStyled\";\n\nclass ContactForm extends Component {\n  state = { name: \"\", number: \"\" };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onHandleSubmit = (e) => {\n    e.preventDefault();\n\n    const contact = {\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    const sameContact = this.props.contacts.find(\n      (contact) => contact.name.toLowerCase() === this.state.name.toLowerCase()\n    );\n    if (sameContact) {\n      return alert(`${this.state.name} is already exists in the Phonebook`);\n    }\n\n    this.props.onSubmit(contact);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <ContactFormStyled>\n        <form onSubmit={this.onHandleSubmit}>\n          <label>\n            Name\n            <input\n              value={this.state.name}\n              onChange={this.handleInputChange}\n              type=\"text\"\n              name=\"name\"\n              className=\"inputName\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т.п.\"\n              required\n            />\n            <input\n              type=\"tel\"\n              name=\"number\"\n              className=\"inputName\"\n              value={this.state.number}\n              onChange={this.handleInputChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять из цифр, может содержать пробелы, тире, круглые скобки и начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className=\"btnAdd\">\n            Add contact\n          </button>\n        </form>\n      </ContactFormStyled>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: getContacts(state),\n  // contacts: state.contacts.items,\n  // filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (contact) => dispatch(addContact(contact)),\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import styled from \"styled-components\";\n\nexport const ContactListItemStyled = styled.div`\n  .btnDelete {\n    padding: 3px;\n    margin: 7px 12px;\n    border-radius: 6px;\n    background-color: transparent;\n    cursor: pointer;\n    &:hover {\n      background-color: cornflowerblue;\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ContactListItemStyled } from \"./ContactListItemStyled\";\n\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\n  const onDeleteItem = () => {\n    onDeleteContact(id);\n  };\n\n  return (\n    <ContactListItemStyled>\n      <li>\n        {name}\n        <span>: </span>\n        {number}\n        <button className=\"btnDelete\" type=\"button\" onClick={onDeleteItem}>\n          Delete\n        </button>\n      </li>\n    </ContactListItemStyled>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./contactListItem/ContactListItem\";\nimport { connect } from \"react-redux\";\nimport { getFilteredContacts, getLoading } from \"../../redux/contacts/contactSelectors\";\nimport { deleteContact } from \"../../redux/contacts/contactsOperations\";\n\nconst ContactList = ({ contacts, filter, onDeleteContact }) => {\n  return (\n    <ol>\n      {contacts\n        .filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n        .map((contact) => (\n          <ContactListItem key={contact.id} {...contact} onDeleteContact={onDeleteContact} />\n        ))}\n    </ol>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: getFilteredContacts(state),\n  filter: state.contacts.filter,\n  loading: getLoading(state),\n});\n\nexport default connect(mapStateToProps, { onDeleteContact: deleteContact })(ContactList);\n","import styled from \"styled-components\";\n\nexport const FilterStyled = styled.div`\n  margin-left: 10px;\n  .inputFilter {\n    margin-top: 15px;\n    margin-bottom: 15px;\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FilterStyled } from \"./FilterStyled\";\nimport { connect } from \"react-redux\";\nimport { setFilter } from \"../../redux/contacts/contactActions\";\n\nconst Filter = ({ setFilter, filter }) => {\n  return (\n    <FilterStyled>\n      <label className=\"labelFilter\">\n        Find contacts by name:\n        <input\n          className=\"inputFilter\"\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n        />\n      </label>\n    </FilterStyled>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  filter: state.filter,\n});\n\n// const mapDispatchToProps = (dispatch) => ({\n//   handleInputChange: (e) => dispatch(setFilter(e.target.value)),\n// });\n\nconst mapDispatchToProps = {\n  setFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  setFilter: PropTypes.func.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const SectionStyled = styled.section`\n  .sectionTitle {\n    color: cornflowerblue;\n    margin: 20px;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SectionStyled } from \"./SectionStyled\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <SectionStyled>\n      <h2 className=\"sectionTitle\">{title.toUpperCase()}</h2>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\nimport Section from \"./components/section/Section\";\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Filter />\n      <Section title=\"Contacts\">\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  deleteContactSuccess,\n  deleteContactRequest,\n  deleteContactError,\n  getContactError,\n  getContactSuccess,\n  getContactRequest,\n  setFilter,\n} from \"./contactActions\";\n\nexport const items = createReducer([], {\n  [getContactSuccess]: (_, { payload }) => [...payload],\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => state.filter((item) => item.id !== payload),\n});\n\n// const contactItemReducer = createReducer([], {\n//   [addContact]: (state, action) => [...state, action.payload],\n//   [deleteContact]: (state, action) => state.filter((item) => item.id !== action.payload),\n// });\n\nexport const filter = createReducer(\"\", {\n  [setFilter]: (_, { payload }) => payload,\n});\n\n// const filterReducer = createReducer(\"\", {\n//   [setFilter]: (_, action) => action.payload,\n// });\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [getContactRequest]: () => true,\n  [getContactSuccess]: () => false,\n  [getContactError]: () => false,\n});\n\nconst setError = (_, { payload }) => payload;\nconst resetError = () => null;\n\nconst error = createReducer(null, {\n  [addContactRequest]: resetError,\n  [addContactError]: setError,\n  [deleteContactRequest]: resetError,\n  [deleteContactError]: setError,\n  [getContactRequest]: resetError,\n  [getContactError]: setError,\n});\n\n// const contactReducer = combineReducers({\n//   items: contactItemReducer,\n//   filter: filterReducer,\n// });\n\nconst contactReducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n\nexport default contactReducer;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport contactReducer from \"./contacts/contactReducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n});\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}